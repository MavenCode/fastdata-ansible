---
- name: check alluxio-master group exists in inventory hosts
  local_action: fail msg='To deploy alluxio alluxio-master group must be specified and has only one'
  when: not groups['alluxio-master']|length == 1
  run_once: true

- name: check alluxio-workers group exists
  local_action: fail msg='To deploy alluxio alluxio-workers group must be specified'
  when: groups['alluxio-workers']|length == 0
  run_once: true

- name: create alluxio-master credential directory
  file: path="/home/{{ alluxio_user }}/.ssh" state=directory owner="{{ alluxio_user }}" group="{{ alluxio_user }}" mode=755
  become: true

- name: generate key files on master node
  command: ssh-keygen -N '' -C "{{ alluxio_user }}@{{ alluxio_group }}" -f /home/{{ alluxio_user }}/.ssh/id_rsa
  args:
    creates: "/home/{{ alluxio_user }}/.ssh/id_rsa.pub"
  when: was_alluxio_master
  become: true

- name: change key file permission
  file: path="/home/{{ alluxio_user }}/.ssh/{{ item.file }}" owner="{{ alluxio_user }}" group="{{ alluxio_group }}" mode={{ item.mode }}
  when: was_alluxio_master
  become: true
  with_items:
    - { file: id_rsa    , mode: 600 }
    - { file: id_rsa.pub, mode: 644 }
  
- name: read alluxio-master public key file
  shell: sudo -u "{{ alluxio_user }}" cat /home/{{ alluxio_user }}/.ssh/id_rsa.pub
  when: was_alluxio_master
  register: readalluxiopubkey
  become: true

- name: set alluxio public key fact
  set_fact: alluxiopublickey="{{ readalluxiopubkey.stdout }}"
  when: was_alluxio_master
  run_once: true
  become: true

- name: distribute authorized keys to worker nodes.
  authorized_key:
    user: "{{ alluxio_user }}"
    key: "{{ alluxiopublickey | mandatory }}"
  become: true
